{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\React\\\\food_order\\\\src\\\\components\\\\cart\\\\cart-context.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useReducer } from \"react\";\nimport { act } from \"react-dom/test-utils\";\nimport CartContext from \"./cart-ctx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultcartstate = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartreducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedamt = state.totalAmount + action.item.price * action.item.amount;\n    const existingindex = state.items.findIndex(item => item.id === action.item.id);\n    const existing = state.items[existingindex];\n    let updateditms;\n\n    if (existing) {\n      const updateditm = { ...existing,\n        amount: existing.amount + action.item.amount\n      };\n      updateditms = [...state.items];\n      updateditms[existingindex] = updateditm;\n    } else {\n      updateditms = state.items.concat(action.item);\n    }\n\n    return {\n      items: updateditms,\n      totalAmount: updatedamt\n    };\n  }\n\n  if (action.type === 'REMOVE') {\n    const existingindex = state.items.findIndex(item => item.id === action.id);\n    const existing = state.items[existingindex];\n    const updatedamt = state.totalAmount - existing.price;\n    let updateditms;\n\n    if (existing.amount === 1) {\n      updateditms = state.items.filter(item => item.id !== action.id);\n    } else {\n      const updateditm = { ...existing,\n        amount: existing.amount - 1\n      };\n      updateditms = [...state.items];\n      updateditms[existingindex] = updateditm;\n    }\n\n    return {\n      items: updateditms,\n      totalAmount: updatedamt\n    };\n  }\n\n  if (action.type === 'CLEAR') {\n    return defaultcartstate;\n  }\n\n  return defaultcartstate;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartstate, cartaction] = useReducer(cartreducer, defaultcartstate);\n\n  const additemHandle = item => {\n    cartaction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeitemHandle = item => {\n    cartaction({\n      type: 'REMOVE',\n      item: item\n    });\n  };\n\n  const clearcart = item => {\n    cart;\n  };\n\n  const cartContext = {\n    items: cartstate.items,\n    totalAmount: cartstate.totalAmount,\n    additem: additemHandle,\n    removeItem: removeitemHandle\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"LPtYQ5al3ikDNZqB7JzEsumGB1c=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/dell/Desktop/React/food_order/src/components/cart/cart-context.js"],"names":["React","useReducer","act","CartContext","defaultcartstate","items","totalAmount","cartreducer","state","action","type","updatedamt","item","price","amount","existingindex","findIndex","id","existing","updateditms","updateditm","concat","filter","CartProvider","props","cartstate","cartaction","additemHandle","removeitemHandle","clearcart","cart","cartContext","additem","removeItem","children"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useReducer } from \"react\";\r\nimport { act } from \"react-dom/test-utils\";\r\n\r\nimport CartContext from \"./cart-ctx\";\r\n\r\nconst defaultcartstate = {\r\n  items: [],\r\n  totalAmount: 0,\r\n};\r\n\r\nconst cartreducer = (state, action) => {\r\n  if (action.type === 'ADD') {\r\n    const updatedamt =  state.totalAmount + action.item.price * action.item.amount;\r\n    const existingindex = state.items.findIndex(item => item.id === action.item.id);\r\n    const existing = state.items[existingindex];\r\n    let updateditms;\r\n    if(existing){\r\n        const updateditm ={\r\n            ...existing,\r\n            amount: existing.amount + action.item.amount\r\n        };\r\n        updateditms = [...state.items];\r\n        updateditms[existingindex] = updateditm;\r\n    } else {\r\n        \r\n        updateditms = state.items.concat(action.item);\r\n    }\r\n    return {\r\n      items: updateditms,\r\n      totalAmount: updatedamt,\r\n    };\r\n  }\r\n\r\n  if (action.type === 'REMOVE') {\r\n    const existingindex = state.items.findIndex((item) => item.id === action.id);\r\n    const existing = state.items[existingindex];\r\n    const updatedamt = state.totalAmount - existing.price;\r\n    let updateditms;\r\n    if (existing.amount ===1  ){\r\n        updateditms = state.items.filter(\r\n            item => item.id !== action.id\r\n        );\r\n    } else {\r\n        const updateditm = {...existing, amount: existing.amount - 1}\r\n        updateditms = [...state.items];\r\n        updateditms[existingindex]= updateditm;\r\n    }\r\n\r\n\r\n\r\n    return{\r\n        items: updateditms,\r\n        totalAmount: updatedamt\r\n    }\r\n  }\r\n\r\n  if (action.type === 'CLEAR') {\r\n    return defaultcartstate;\r\n  }\r\n\r\n  return defaultcartstate;\r\n};\r\n\r\nconst CartProvider = (props) => {\r\n  const [cartstate, cartaction] = useReducer(cartreducer, defaultcartstate);\r\n\r\n  const additemHandle = (item) => {\r\n    cartaction({ type: 'ADD', item: item });\r\n  };\r\n\r\n  const removeitemHandle = (item) => {\r\n    cartaction({ type: 'REMOVE', item: item });\r\n  };\r\n\r\n  const clearcart = (item) => {\r\n    cart\r\n  }\r\n\r\n  const cartContext = {\r\n    items: cartstate.items,\r\n    totalAmount: cartstate.totalAmount,\r\n    additem: additemHandle,\r\n    removeItem: removeitemHandle,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n"]},"metadata":{},"sourceType":"module"}