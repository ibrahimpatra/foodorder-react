{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\React\\\\food_order\\\\src\\\\components\\\\cart\\\\cart-context.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useReducer } from \"react\";\nimport { act } from \"react-dom/test-utils\";\nimport CartContext from \"./cart-ctx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultcartstate = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartreducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updateditm = state.items.concat(action.item);\n    const updatedamt = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updateditm,\n      totalAmount: updatedamt\n    };\n  }\n\n  return defaultcartstate;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartstate, cartaction] = useReducer(cartreducer, defaultcartstate);\n\n  const additemHandle = item => {\n    cartaction({\n      type: \"ADD \",\n      item: item\n    });\n  };\n\n  const removeitemHandle = item => {\n    cartaction({\n      type: \"REMOVE \",\n      item: item\n    });\n  };\n\n  const cartContext = {\n    items: cartstate.items,\n    totalAmount: cartstate.totalAmount,\n    additem: additemHandle,\n    removeItem: removeitemHandle\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"LPtYQ5al3ikDNZqB7JzEsumGB1c=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/dell/Desktop/React/food_order/src/components/cart/cart-context.js"],"names":["React","useReducer","act","CartContext","defaultcartstate","items","totalAmount","cartreducer","state","action","type","updateditm","concat","item","updatedamt","price","amount","CartProvider","props","cartstate","cartaction","additemHandle","removeitemHandle","cartContext","additem","removeItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,GAAT,QAAoB,sBAApB;AAEA,OAAOC,WAAP,MAAwB,YAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,KAAK,EAAE,EADgB;AAEvBC,EAAAA,WAAW,EAAE;AAFU,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACzB,UAAMC,UAAU,GAAGH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAAnB;AACA,UAAMC,UAAU,GACdN,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,IAAP,CAAYE,KAAZ,GAAoBN,MAAM,CAACI,IAAP,CAAYG,MADtD;AAEA,WAAO;AACLX,MAAAA,KAAK,EAAEM,UADF;AAELL,MAAAA,WAAW,EAAEQ;AAFR,KAAP;AAID;;AACD,SAAOV,gBAAP;AACD,CAXD;;AAaA,MAAMa,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM,CAACC,SAAD,EAAYC,UAAZ,IAA0BnB,UAAU,CAACM,WAAD,EAAcH,gBAAd,CAA1C;;AAEA,QAAMiB,aAAa,GAAIR,IAAD,IAAU;AAC9BO,IAAAA,UAAU,CAAC;AAAEV,MAAAA,IAAI,EAAE,MAAR;AAAgBG,MAAAA,IAAI,EAAEA;AAAtB,KAAD,CAAV;AACD,GAFD;;AAIA,QAAMS,gBAAgB,GAAIT,IAAD,IAAU;AACjCO,IAAAA,UAAU,CAAC;AAAEV,MAAAA,IAAI,EAAE,SAAR;AAAmBG,MAAAA,IAAI,EAAEA;AAAzB,KAAD,CAAV;AACD,GAFD;;AAIA,QAAMU,WAAW,GAAG;AAClBlB,IAAAA,KAAK,EAAEc,SAAS,CAACd,KADC;AAElBC,IAAAA,WAAW,EAAEa,SAAS,CAACb,WAFL;AAGlBkB,IAAAA,OAAO,EAAEH,aAHS;AAIlBI,IAAAA,UAAU,EAAEH;AAJM,GAApB;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,WAA7B;AAAA,cACGL,KAAK,CAACQ;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAvBD;;GAAMT,Y;;KAAAA,Y;AAyBN,eAAeA,YAAf","sourcesContent":["import React from \"react\";\r\nimport { useReducer } from \"react\";\r\nimport { act } from \"react-dom/test-utils\";\r\n\r\nimport CartContext from \"./cart-ctx\";\r\n\r\nconst defaultcartstate = {\r\n  items: [],\r\n  totalAmount: 0,\r\n};\r\n\r\nconst cartreducer = (state, action) => {\r\n  if (action.type === 'ADD') {\r\n    const updateditm = state.items.concat(action.item);\r\n    const updatedamt =\r\n      state.totalAmount + action.item.price * action.item.amount;\r\n    return {\r\n      items: updateditm,\r\n      totalAmount: updatedamt,\r\n    };\r\n  }\r\n  return defaultcartstate;\r\n};\r\n\r\nconst CartProvider = (props) => {\r\n  const [cartstate, cartaction] = useReducer(cartreducer, defaultcartstate);\r\n\r\n  const additemHandle = (item) => {\r\n    cartaction({ type: \"ADD \", item: item });\r\n  };\r\n\r\n  const removeitemHandle = (item) => {\r\n    cartaction({ type: \"REMOVE \", item: item });\r\n  };\r\n\r\n  const cartContext = {\r\n    items: cartstate.items,\r\n    totalAmount: cartstate.totalAmount,\r\n    additem: additemHandle,\r\n    removeItem: removeitemHandle,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n"]},"metadata":{},"sourceType":"module"}