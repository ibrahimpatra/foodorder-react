{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\React\\\\food_order\\\\src\\\\components\\\\cart\\\\cart-context.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useReducer } from \"react\";\nimport { act } from \"react-dom/test-utils\";\nimport CartContext from \"./cart-ctx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultcartstate = {\n  items: [],\n  tot: 0\n};\n\nconst cartreducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updateditm = state.items.concat(action.item);\n    const updatedamt = state.totalamount + action.item.price * action.item.amount;\n    return {\n      items: updateditm,\n      totalamount: updatedamt\n    };\n  }\n\n  return defaultcartstate;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartstate, cartaction] = useReducer(cartreducer, defaultcartstate);\n\n  const additemHandle = item => {\n    cartaction({\n      type: 'ADD ',\n      item: item\n    });\n  };\n\n  const removeitemHandle = item => {\n    cartaction({\n      type: 'REMOVE ',\n      item: item\n    });\n  };\n\n  const cartContext = {\n    items: cartstate.items,\n    totalamount: cartstate.totalamount,\n    additem: additemHandle,\n    remocveItem: removeitemHandle\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 12\n  }, this);\n};\n\n_s(CartProvider, \"Vbus3aMng0rA35aD7d+am8Po6Sw=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/dell/Desktop/React/food_order/src/components/cart/cart-context.js"],"names":["React","useReducer","act","CartContext","defaultcartstate","items","tot","cartreducer","state","action","type","updateditm","concat","item","updatedamt","totalamount","price","amount","CartProvider","props","cartstate","cartaction","additemHandle","removeitemHandle","cartContext","additem","remocveItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,GAAT,QAAoB,sBAApB;AAEA,OAAOC,WAAP,MAAwB,YAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAE,EADc;AAErBC,EAAAA,GAAG,EAAE;AAFgB,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA0B;AACtB,UAAMC,UAAU,GAAGH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAAnB;AACA,UAAMC,UAAU,GAAGN,KAAK,CAACO,WAAN,GAAoBN,MAAM,CAACI,IAAP,CAAYG,KAAZ,GAAoBP,MAAM,CAACI,IAAP,CAAYI,MAAvE;AACA,WAAM;AACFZ,MAAAA,KAAK,EAAEM,UADL;AAEFI,MAAAA,WAAW,EAAED;AAFX,KAAN;AAIH;;AACD,SAAOV,gBAAP;AACH,CAVD;;AAYA,MAAMc,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAM,CAACC,SAAD,EAAYC,UAAZ,IAA2BpB,UAAU,CAACM,WAAD,EAAcH,gBAAd,CAA3C;;AAEA,QAAMkB,aAAa,GAAGT,IAAI,IAAI;AAC1BQ,IAAAA,UAAU,CAAC;AAACX,MAAAA,IAAI,EAAE,MAAP;AAAeG,MAAAA,IAAI,EAAEA;AAArB,KAAD,CAAV;AACH,GAFD;;AAIA,QAAMU,gBAAgB,GAAGV,IAAI,IAAI;AAC7BQ,IAAAA,UAAU,CAAC;AAACX,MAAAA,IAAI,EAAE,SAAP;AAAkBG,MAAAA,IAAI,EAAEA;AAAxB,KAAD,CAAV;AACH,GAFD;;AAIA,QAAMW,WAAW,GAAG;AAChBnB,IAAAA,KAAK,EAACe,SAAS,CAACf,KADA;AAEpBU,IAAAA,WAAW,EAAEK,SAAS,CAACL,WAFH;AAGpBU,IAAAA,OAAO,EAAEH,aAHW;AAIpBI,IAAAA,WAAW,EAAEH;AAJO,GAApB;AAOA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,WAA7B;AAAA,cACFL,KAAK,CAACQ;AADJ;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH,CArBD;;GAAMT,Y;;KAAAA,Y;AAuBN,eAAeA,YAAf","sourcesContent":["import React from \"react\";\r\nimport { useReducer } from \"react\";\r\nimport { act } from \"react-dom/test-utils\";\r\n\r\nimport CartContext from \"./cart-ctx\";\r\n\r\nconst defaultcartstate = {\r\n    items: [],\r\n    tot: 0\r\n}\r\n\r\nconst cartreducer = (state, action) => {\r\n    if (action.type === 'ADD'){\r\n        const updateditm = state.items.concat(action.item);\r\n        const updatedamt = state.totalamount + action.item.price * action.item.amount;\r\n        return{\r\n            items: updateditm,\r\n            totalamount: updatedamt\r\n        }\r\n    }\r\n    return defaultcartstate\r\n}\r\n\r\nconst CartProvider = (props) => {\r\n    const [cartstate, cartaction ] = useReducer(cartreducer, defaultcartstate);\r\n\r\n    const additemHandle = item => {\r\n        cartaction({type: 'ADD ', item: item});\r\n    };\r\n\r\n    const removeitemHandle = item => {\r\n        cartaction({type: 'REMOVE ', item: item});\r\n    };\r\n\r\n    const cartContext = {\r\n        items:cartstate.items,\r\n    totalamount: cartstate.totalamount,\r\n    additem: additemHandle,\r\n    remocveItem: removeitemHandle\r\n    };\r\n\r\n    return <CartContext.Provider value={cartContext}>\r\n        {props.children}\r\n    </CartContext.Provider>\r\n}\r\n\r\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}